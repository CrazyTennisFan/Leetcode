Given a pattern and a string str, find if str follows the same pattern.

Here follow means a full match, such that there is a bijection between a letter in pattern and a non-empty word in str.

Examples:
pattern = "abba", str = "dog cat cat dog" should return true.
pattern = "abba", str = "dog cat cat fish" should return false.
pattern = "aaaa", str = "dog cat cat dog" should return false.
pattern = "abba", str = "dog dog dog dog" should return false.
Notes:
You may assume pattern contains only lowercase letters, and str contains lowercase letters separated by a single space.


-------------------------------------------------------------------------------------------------------


class Solution {
    public boolean wordPattern(String pattern, String str) {
        if(pattern == null) return false;
        String[] s = str.split(" ");
        
        if(pattern.length() != s.length)
            return false;
        
        HashMap<Character, String> map1 = new HashMap<>();
        HashMap<String, Character> map2 = new HashMap<>();
        for(int i = 0; i < pattern.length(); i++)
        {
            char c = pattern.charAt(i);
            if(map1.containsKey(c))
            {
                if(map1.get(c).compareTo(s[i]) != 0)
                    return false;
            }
            else
            {
                map1.put(c, s[i]);
            }
        }
        
        for(int i = 0; i < s.length; i++)
        {
            if(map2.containsKey(s[i]))
            {
                if(map2.get(s[i]) != pattern.charAt(i))
                    return false;
            }
            else
            {
                map2.put(s[i], pattern.charAt(i));
            }
        }
        
        return true;
            
    }  
}