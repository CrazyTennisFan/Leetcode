Design and implement a TwoSum class. It should support the following operations: add and find.

add - Add the number to an internal data structure.
find - Find if there exists any pair of numbers which sum is equal to the value.

For example,
add(1); add(3); add(5);
find(4) -> true
find(7) -> false


--------------------------------------------------------------------------------------------------------


class TwoSum {

    /** Initialize your data structure here. */
    private List<Integer> l = new ArrayList();
    private HashMap<Integer, Integer> map = new HashMap();
    
    public TwoSum() {
        
    }
    
    /** Add the number to an internal data structure.. */
    public void add(int number) {
        if (map.containsKey(number))
            map.put(number, map.get(number)+1);
        else
        {
            map.put(number, 1);
            l.add(number);
        }
                
    }
    
    /** Find if there exists any pair of numbers which sum is equal to the value. */
    public boolean find(int value) {
        for(int i = 0; i < l.size(); i++)
        {
            int n1 = l.get(i);
            int n2 = value - n1;
            if ((n1 == n2 && map.get(n1) >= 2) ||  (n1 != n2 && map.containsKey(n2)) )
                return true;
        }
        
        return false;
        
    }
}

/**
 * Your TwoSum object will be instantiated and called as such:
 * TwoSum obj = new TwoSum();
 * obj.add(number);
 * boolean param_2 = obj.find(value);
 */