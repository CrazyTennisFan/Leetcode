Given a linked list and a value x, partition it such that all nodes less than x come before nodes greater than or equal to x.

You should preserve the original relative order of the nodes in each of the two partitions.

For example,
Given 1->4->3->2->5->2 and x = 3,
return 1->2->2->4->3->5.



----------------------------------------------------------------------------------------------------


/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode partition(ListNode head, int x) {
        if (head == null)  return head;
        
        ListNode smallHead = new ListNode(0);
        ListNode bigHead = new ListNode(0);
        
        ListNode oldHead = head;
        ListNode s = smallHead;
        ListNode b = bigHead;
        while(oldHead!=null)
        { 
            if (oldHead.val >= x)
               b = b.next = oldHead;
            else
               s = s.next = oldHead;
            
            oldHead = oldHead.next;
        }
                
        s.next = bigHead.next;
        b.next = null;
        
        return smallHead.next;
        
    }
}


 