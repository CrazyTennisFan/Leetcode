Given a list of words and two words word1 and word2, return the shortest distance between these two words in the list.

For example,
Assume that words = ["practice", "makes", "perfect", "coding", "makes"].

Given word1 = ¡°coding¡±, word2 = ¡°practice¡±, return 3.
Given word1 = "makes", word2 = "coding", return 1.

Note:
You may assume that word1 does not equal to word2, and word1 and word2 are both in the list.


------------------------------------------------------------------------------------------------


class Solution {
    public int shortestDistance(String[] words, String word1, String word2) {
        int l1 = -1;
        int l2 = -1;
        int distance = Integer.MAX_VALUE;
        for(int i = 0; i < words.length; i++)
        {
            if (words[i].compareTo(word1) == 0)
            {
                l1 = i;
                if (l1 >= 0 && l2 >= 0)
                    distance = Math.min(distance, Math.abs(l2-l1));
            }
            else if (words[i].compareTo(word2) == 0)
            {
                l2 = i;
                if (l1 >= 0 && l2 >= 0)
                    distance = Math.min(distance, Math.abs(l2-l1));
            }
        }
        
        return distance;
    }
}