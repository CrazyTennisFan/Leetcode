Given a string, you need to reverse the order of characters in each word within a sentence while still preserving whitespace and initial word order.

Example 1:
Input: "Let's take LeetCode contest"
Output: "s'teL ekat edoCteeL tsetnoc"
Note: In the string, each word is separated by single space and there will not be any extra space in the string.


--------------------------------------------------------------------------------------


class Solution {
    public String reverseWords(String s) {
        if (s == null || s.length() == 0 )  return s;
        
        StringBuilder sb = new StringBuilder();
        String[] sa = s.split(" ");
        for(String t: sa)
        {
            char[] arr = reverse(t);
            sb.append(String.valueOf(arr) + " ");
        }
        return sb.toString().trim();
        
    }
    
    public char[] reverse(String s)
    {
        char[] ans = s.toCharArray();
        for(int i = 0; i < ans.length/2; i++)
        {
            char t = ans[i];
            ans[i] = ans[ans.length - i - 1];
            ans[ans.length - i - 1] = t;
        }
        
        return ans;
    }
}