Given a circular array (the next element of the last element is the first element of the array), print the Next Greater Number for every element. The Next Greater Number of a number x is the first greater number to its traversing-order next in the array, which means you could search circularly to find its next greater number. If it doesn't exist, output -1 for this number.

Example 1:
Input: [1,2,1]
Output: [2,-1,2]
Explanation: The first 1's next greater number is 2; 
The number 2 can't find next greater number; 
The second 1's next greater number needs to search circularly, which is also 2.
Note: The length of given array won't exceed 10000.


-------------------------------------------------------------------------------------------------------

class Solution {
    public int[] nextGreaterElements(int[] nums) {
        int[] res = new int[nums.length];
        Stack<Integer> s = new Stack();
        int len = 0;
        while(len < nums.length * 2 -1)
        {
            while(!s.isEmpty() && nums[len%nums.length] > nums[s.peek()])
            {
                int index = s.pop();
                res[index] = nums[len%nums.length];
            }
            if(len<nums.length)
                s.push(len);
            len++;
        }
        
        while(!s.isEmpty())
            res[s.pop()] = -1;
        
        return res;
    }
}