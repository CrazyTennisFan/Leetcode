Given an array of 2n integers, your task is to group these integers into n pairs of integer, say (a1, b1), (a2, b2), ..., (an, bn) which makes sum of min(ai, bi) for all i from 1 to n as large as possible.

Example 1:
Input: [1,4,3,2]

Output: 4
Explanation: n is 2, and the maximum sum of pairs is 4 = min(1, 2) + min(3, 4).
Note:
n is a positive integer, which is in the range of [1, 10000].
All the integers in the array will be in the range of [-10000, 10000].



-----------------------------------------------------------------------------------------


class Solution {
    public int arrayPairSum(int[] nums) {
        int[] arr = new int[20001];
        for(int x : nums)
        {
            arr[10000+x]++;
        }
        
        int ans = 0;
        boolean beAdd = true;
        for(int i = 0; i < arr.length; i++)
        {
            while(arr[i] > 0)
            {
                if(beAdd)
                {
                    ans += i-10000;
                }
                arr[i]--;
                beAdd = !beAdd;
            }
        }
        
        return ans;
       
    }
}


Complexity Analysis

Time complexity : O(n). The whole hashmap ar of size n is traversed only once.

Space complexity : O(n). A hashmap arr of size n is used.