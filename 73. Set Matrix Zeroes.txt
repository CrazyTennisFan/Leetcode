Given a m x n matrix, if an element is 0, set its entire row and column to 0. Do it in place.

click to show follow up.

Follow up:
Did you use extra space?
A straight forward solution using O(mn) space is probably a bad idea.
A simple improvement uses O(m + n) space, but still not the best solution.
Could you devise a constant space solution?


======================================================================================================






class Solution {
    public void setZeroes(int[][] matrix) {
        if (matrix == null || matrix.length == 0)   return;
        int row = matrix.length;
        int len = matrix[0].length;
        boolean rowZero = false;
        boolean colZero = false;
        
        for(int i = 0; i < row; i++)
        {
            for(int j = 0; j < len; j++)
            {
                if (matrix[i][j] == 0)
                {
                    matrix[i][0] = 0;
                    matrix[0][j] = 0;
                    if (i == 0)   rowZero = true;
                    if (j == 0)   colZero = true;
                }
            }
        }
        
        for(int i = 1; i < row; i++)
        {
            for(int j = 1; j < len; j++)
            {
                if (matrix[0][j] == 0 || matrix[i][0] == 0)
                {
                   matrix[i][j] = 0;
                }
            }
        }
        
        if (rowZero)
        {
            for(int i = 0; i < len; i++)
            {
                matrix[0][i] = 0;
            }
        }
        
        if (colZero)
        {
            for(int i = 0; i < row; i++)
            {
                matrix[i][0] = 0;
            }
        }
        

        return;
    }
}