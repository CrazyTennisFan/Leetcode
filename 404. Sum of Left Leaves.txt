Find the sum of all left leaves in a given binary tree.

Example:

    3
   / \
  9  20
    /  \
   15   7

There are two left leaves in the binary tree, with values 9 and 15 respectively. Return 24.



------------------------------------------------------------------------------------------------------



/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public int sumOfLeftLeaves(TreeNode root) {
        Stack<TreeNode>  stack = new Stack();
        
        int sum = 0;
        
        while(root!=null || !stack.isEmpty())
        {
            while(root!=null)
            {
                stack.push(root);
                root = root.left;
                if (root!=null && root.left == null && root.right == null)
                     sum += root.val;
            }
            root = stack.pop();            
            root = root.right;
        }
        
        return sum;
    }
}