Given a sorted linked list, delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list.

For example,
Given 1->2->3->3->4->4->5, return 1->2->5.
Given 1->1->1->2->3, return 2->3.


-------------------------------------------------------------------------------------------------


/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode deleteDuplicates(ListNode head) {
        if (head == null || head.next == null)  return head;
        
        ListNode dummyHead = new ListNode(0);
        
        ListNode p = dummyHead;
        ListNode t = head;
        
        p.next = t;
        
        boolean deleteSelf = false;
        while(t!=null && t.next != null)
        {
            if (t.val == t.next.val)
            {
                t.next = t.next.next;
                deleteSelf = true;
            }
            else{
                if (deleteSelf)
                {
                    p.next = t.next;
                    t = p.next;
                    deleteSelf = false;
                }
                else
                {
                    t = t.next;    
                    p = p.next;
                }
                
            }
                
        }
        
        if (deleteSelf)  p.next = t.next;
        
        return dummyHead.next;
        
        
    }
}