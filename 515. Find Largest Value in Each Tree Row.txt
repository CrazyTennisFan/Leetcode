You need to find the largest value in each row of a binary tree.

Example:
Input: 

          1
         / \
        3   2
       / \   \  
      5   3   9 

Output: [1, 3, 9]


-------------------------------------------------------------------------------


/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<Integer> largestValues(TreeNode root) {
        
        List<Integer> res = new ArrayList();
        if (root == null)   return res;
        
        LinkedList<TreeNode>  queue = new LinkedList();
        queue.add(root);
        int size = 1;
        while(!queue.isEmpty())
        {
            int num = size;
            size = 0;
            int max = 0;
            for(int i = 0; i < num; i++)
            {
                TreeNode n = queue.poll();
                if (i == 0)   max = n.val;
                else max = Math.max(max, n.val);
                if (n.left != null)
                {
                    queue.add(n.left);
                    size++;
                }
                if (n.right != null)
                {
                    queue.add(n.right);
                    size++;
                }
            }
            res.add(max);
        }
        
        return res;
    }
}