Reverse a singly linked list.

click to show more hints.

Hint:
A linked list can be reversed either iteratively or recursively. Could you implement both?



------------------------------------------------------------------------------------------------



/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode reverseList(ListNode head) {
        if (head == null || head.next == null)  return head;
        
        ListNode fakehead = new ListNode(0);
        ListNode t = head;
        while(head!=null)
        {
            head = head.next;
            t.next = fakehead.next;
            fakehead.next = t;
            t = head;
        }
        
        return fakehead.next;
        
        
    }
}




---------------------------------------------------------------------------------------------



/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode reverseList(ListNode head) {
        if (head == null || head.next == null)  return head;
        
        ListNode p = reverseList(head.next);
        head.next.next = head;
        head.next = null;        
        return p;
        
        
    }
}