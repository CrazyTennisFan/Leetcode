Given two strings s and t, determine if they are isomorphic.

Two strings are isomorphic if the characters in s can be replaced to get t.

All occurrences of a character must be replaced with another character while preserving the order of characters. No two characters may map to the same character but a character may map to itself.

For example,
Given "egg", "add", return true.

Given "foo", "bar", return false.

Given "paper", "title", return true.

Note:
You may assume both s and t have the same length.



-------------------------------------------------------------------------------------------


class Solution {
    public boolean isIsomorphic(String s, String t) {
        if (s == null || t == null)
            return false;
        
        int[] map_s = new int[256];
        int[] map_t = new int[256];
        
        for(int i = 0; i < s.length(); i++){
            if(map_s[s.charAt(i)] == 0)
            {
                map_s[s.charAt(i)] = t.charAt(i);                
            }
            else if(map_s[s.charAt(i)] != t.charAt(i)){
                return false;
            }
        }
        
        for(int i = 0; i < t.length(); i++){
            if(map_t[t.charAt(i)] == 0)
            {
                map_t[t.charAt(i)] = s.charAt(i);                
            }
            else if(map_t[t.charAt(i)] != s.charAt(i)){
                return false;
            }
        }
      
        return true;
    }
}