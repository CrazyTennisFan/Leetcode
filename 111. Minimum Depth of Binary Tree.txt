Given a binary tree, find its minimum depth.

The minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node.



-------------------------------------------------------------------------------------------------



/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public int minDepth(TreeNode root) {
        if (root == null)  return 0;
        
        int leftDepth = getDepth(root);
        int rightDepth = getDepth(root);
        
        return Math.min(leftDepth, rightDepth);
    }
    
    public int getDepth(TreeNode node)
    {
        if (node.left == null && node.right == null)  return 1;
        if (node.left != null && node.right != null)  
            return Math.min(getDepth(node.left), getDepth(node.right))+1;
        else if (node.left == null)
            return getDepth(node.right)+1;
        else
            return getDepth(node.left)+1;
        
    }
}