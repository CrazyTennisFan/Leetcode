Given an integer, write a function to determine if it is a power of three.

Follow up:
Could you do it without using any loop / recursion?


------------------------------------------------------------------------------------

class Solution {
    public boolean isPowerOfThree(int n) {
        
        if (n <=0)  return false;
        
        while(n>=3)
        {
            if (n%3!=0) return false;
            n = n /3;
        }

	return n==1;
        
    }
}



Complexity Analysis

Time complexity : O(log_b(n)). In our case that is O(log_3n). The number of divisions is given by that logarithm.

Space complexity : O(1). We are not using any additional memory.




--------------------------------------------------------------------------------------------------


public class Solution {
    public boolean isPowerOfThree(int n) {
        return n > 0 && 1162261467 % n == 0;
    }
}



