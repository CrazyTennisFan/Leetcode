Given a collection of integers that might contain duplicates, nums, return all possible subsets (the power set).

Note: The solution set must not contain duplicate subsets.

For example,
If nums = [1,2,2], a solution is:

[
  [2],
  [1],
  [1,2,2],
  [2,2],
  [1,2],
  []
]



--------------------------------------------------------------------------------------------------------------


class Solution {
    public List<List<Integer>> subsetsWithDup(int[] nums) {
        
        List<List<Integer>> res = new ArrayList();
        
        if (nums == null)
            return res;
        
        Arrays.sort(nums);
        helper(res, new ArrayList<>(), nums, 0);
     
        return res;
    }
    
    
    private void helper(List<List<Integer>> list, List<Integer> cur,int[] nums, int start)
    {
        list.add(new ArrayList<>(cur));
        for(int i = start; i < nums.length; i++)
        {
            if (i > start && nums[i] == nums[i-1])
                continue;
            cur.add(nums[i]);
            helper(list, cur, nums, i+1);
            cur.remove(cur.size()-1);
        }
    }
    
    
}