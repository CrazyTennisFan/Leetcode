Given a list of daily temperatures, produce a list that, for each day in the input, tells you how many days you would have to wait until a warmer temperature. If there is no future day for which this is possible, put 0 instead.

For example, given the list temperatures = [73, 74, 75, 71, 69, 72, 76, 73], your output should be [1, 1, 4, 2, 1, 1, 0, 0].

Note: The length of temperatures will be in the range [1, 30000]. Each temperature will be an integer in the range [30, 100].


---------------------------------------------------------------------------------------------------------

class Solution {
    public int[] dailyTemperatures(int[] temperatures) {
        Stack<Integer>  s1 = new Stack();
        Stack<Integer>  s2 = new Stack();
        int[] res = new int[temperatures.length];
        int index = 0;
        while(index < temperatures.length)
        {
            while(!s1.isEmpty() && temperatures[index] > s1.peek())
            {
                s1.pop();
                int i = s2.pop();
                res[i] = index - i;  
            }
            
            s1.push(temperatures[index]);
            s2.push(index);
            index++;
        }
        
        while(!s1.isEmpty())
        {
            s1.pop();
            res[s2.pop()] = 0;  
        }
        
        return res;
    }
}



-------------------------------------------------------------------------------------------------------------


One stack solution:

class Solution {
    public int[] dailyTemperatures(int[] T) {
        int[] ans = new int[T.length];
        Stack<Integer> stack = new Stack();
        for (int i = T.length - 1; i >= 0; --i) {
            while (!stack.isEmpty() && T[i] >= T[stack.peek()]) stack.pop();
            ans[i] = stack.isEmpty() ? 0 : stack.peek() - i;
            stack.push(i);
        }
        return ans;
    }
}